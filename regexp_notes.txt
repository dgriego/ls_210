metacharacters:

$ ^ * + ? . ( ) [ ] { } | \ /


alternation

/(cat|dog|rabbit)/
Parentheses are used for "grouping" in regex

\t, \n, \r
puts "has tab" if text.match(/\t/)


1. /K/
 Kx
 BlacK
 kelly

2. /h/i or /(h|H)/
 Henry
 perch
 golf

3. /dragon/
 snapdragon
 bearded dragon
 dragoon

4. /(banana|orange|apple|strawberry)/
 banana
 orange
 pineapples
 strawberry
 raspberry
 grappler

5. /(,| )/
 matches a comma or space

6. /(black|blue)berry/

Earlier, we used both * and + in our character classes; this deserves a bit of explanation. Recall that we said that * and + are metacharacters, and have to be escaped with a backslash (\) to retain their literal meaning? Well, we lied. Sort of. Inside a character class -- and only inside a character class -- the rules change a bit. Only the following characters are metacharacters inside a character class:

^ \ - [ ]


1. [Kks]
2. [bc][aou]t
3. [0-9a-jA-J] or [0-9][x][A-Ja-j]+ or /[0-9a-j]/i
4. /[^x]/i or [^x\d\s] or [A-WYZa-wyz]
5. [^a-z]

\[ or [\[]  a literal [
\^ or [\^]  a literal ^
[0-9A-Za-z] any of the usual character class range starting values
- a literal '-'
[0-9A-Za-z] any of the usual character class range ending values
\] or [\]]  a literal ]


\d  Any decimal digit (0-9)
\D  Any character but a decimal digit
\h  Any hexadecimal digit (0-9, A-F, a-f) (Ruby only)
\H  Any character but a hexadecimal digit (Ruby only)


1. \s\w{3}\s or /\s...\s/